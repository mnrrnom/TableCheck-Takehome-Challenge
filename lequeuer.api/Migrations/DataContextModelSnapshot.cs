// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lequeuer.api.Data;

#nullable disable

namespace lequeuer.api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("lequeuer.api.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime(0)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime(0)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("LeadGuestName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("lead_guest_name");

                    b.Property<int>("NumberOfDiners")
                        .HasColumnType("int")
                        .HasColumnName("number_of_diners");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int")
                        .HasColumnName("restaurant_id");

                    b.Property<DateTime?>("SeatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime(0)")
                        .HasColumnName("seated_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("VacatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime(0)")
                        .HasColumnName("vacated_at");

                    b.HasKey("Id")
                        .HasName("pk_reservations");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_reservations_created_at");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("ix_reservations_deleted_at");

                    b.HasIndex("RestaurantId")
                        .HasDatabaseName("ix_reservations_restaurant_id");

                    b.HasIndex("Status")
                        .HasDatabaseName("ix_reservations_status");

                    b.ToTable("reservations", (string)null);
                });

            modelBuilder.Entity("lequeuer.api.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int")
                        .HasColumnName("available_seats");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime(0)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("pk_restaurants");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("ix_restaurants_deleted_at");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_restaurants_name");

                    b.ToTable("restaurants", (string)null);
                });

            modelBuilder.Entity("lequeuer.api.Models.Reservation", b =>
                {
                    b.HasOne("lequeuer.api.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reservations_restaurants_restaurant_id");

                    b.Navigation("Restaurant");
                });
#pragma warning restore 612, 618
        }
    }
}
